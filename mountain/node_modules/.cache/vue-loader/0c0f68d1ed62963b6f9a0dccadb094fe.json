{"remainingRequest":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!/Users/zzz/Desktop/mac/unit/mountain/src/views/article.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/zzz/Desktop/mac/unit/mountain/src/views/article.vue","mtime":1563349450828},{"path":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":499162500000},{"path":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_stylus-loader@3.0.2@stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#articles {\n  .articles__btn {\n    text-align right \n    margin-bottom 20px\n  }\n  .articles__title {\n    margin 20px 0\n    font-size 20px\n  }\n  .ql-container {\n    height 800px\n  }\n  .articles {\n    &__title {\n      font-size 24px\n      text-align center\n    }\n    &__info {\n      text-align right\n      font-size 16px\n      color #888\n      span {\n        display inline-block\n        margin 0 8px\n      }\n    }\n    &__content {\n      margin-top 20px\n      text-indent 2em\n    }\n  }\n}\n",{"version":3,"sources":["article.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"article.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"articles\">\n    <div v-show=\"!preview\">\n      <template v-if=\"show === 'list'\">\n        <div class=\"txtright marginbtm30\">\n          <el-button type=\"info\" @click=\"handleSet('add', {})\">发布文章</el-button>\n        </div>\n        <el-table\n          :data=\"list.data\"\n          style=\"width: 100%\">\n\n          <el-table-column label=\"标题\">\n            <template slot-scope=\"scope\">{{ scope.row.title }}</template>\n          </el-table-column>\n\n          <el-table-column label=\"作者\">\n            <template slot-scope=\"scope\">{{ scope.row.author }}</template>\n          </el-table-column>\n\n          <el-table-column label=\"日期\">\n            <template slot-scope=\"scope\">{{ scope.row.date }}</template>\n          </el-table-column>\n\n          <el-table-column label=\"喜欢\">\n            <template slot-scope=\"scope\">{{ scope.row.likes }}</template>\n          </el-table-column>\n\n          <el-table-column label=\"评分\">\n            <template slot-scope=\"scope\">{{ scope.row.score }}</template>\n          </el-table-column>\n\n          <el-table-column label=\"操作\" min-width=\"90\">\n            <template slot-scope=\"scope\">\n              <el-button\n                size=\"mini\"\n                type=\"error\"\n                @click=\"handleSet('info', scope.row)\">查看</el-button>\n              <el-button\n                size=\"mini\"\n                type=\"primary\"\n                @click=\"handleSet('edit', scope.row)\">编辑</el-button>\n              <el-button\n                size=\"mini\"\n                type=\"danger\"\n                @click=\"handleSet('delete', scope.row)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <div class=\"txtcenter\">\n          <el-pagination\n            background\n            layout=\"total, prev, pager, next\"\n            @current-change=\"(value) => {return handleSearch('pagination', value)}\"\n            :current-page=\"para.pageIndex\"\n            :total=\"list.total\">\n          </el-pagination>\n        </div>\n      </template>\n\n      \n      <template v-if=\"show !== 'list'\" v-loading=\"loading\">\n        <div class=\"articles__btn\">\n          <el-button type=\"info\" @click=\"handleSet('back', null)\" >返回</el-button>\n          <el-button type=\"error\" @click=\"handleSet('preview', {})\">预览</el-button>\n          <el-button type=\"success\" @click=\"handleSubmit\" >发布</el-button>\n        </div>\n        <div class=\"articles__title\">\n          <el-input ref=\"myinput\" placeholder=\"请输入标题\" v-model=\"form.title \" clearable></el-input>\n        </div>\n        <quill-editor \n          v-model=\"form.content\"\n          ref=\"myQuillEditor\"\n          :options=\"editorOption\"\n        >\n        </quill-editor>\n      </template>\n\n    </div>\n\n    <!-- :on-change=\"(file, fileList) => { return handleOnChange(file, fileList, 'articles') }\" -->\n    <div v-show=\"false\">\n      <el-upload\n        class=\"upload-demo\"\n        :data=\"qiniu\"\n        ref=\"upload\"\n        action=\"https://upload-z2.qiniup.com\"\n        :show-file-list=\"true\"\n        :multiple=\"false\"\n        :file-list=\"fileList.articles\"\n        :auto-upload=\"true\"\n        :before-upload=\"(file) => {return handleBeforeUpload(file, 'articles')}\"\n        :on-success=\"(response, file, fileList) => { return handleOnSuccess(response, file, fileList, 'articles') }\"\n        :on-remove=\"(file, fileList) => { return handleOnRemove(file, fileList, 'articles') }\"\n      >\n        <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n      </el-upload>\n      <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">上传到服务器</el-button>\n    </div>\n\n\n    <div v-show=\"preview\">\n      <div class=\"articles__btn\">\n        <el-button type=\"info\" v-if=\"show === 'info'\" @click=\"handleSet('back', null)\" >返回</el-button>\n        <el-button type=\"info\" v-if=\"show === 'preview'\" @click=\"handleSet('backedit', null)\" >返回</el-button>\n        <el-button type=\"success\" v-if=\"show === 'preview'\" @click=\"handleSubmit\" >发布</el-button>\n      </div>\n      <div class=\"articles\">\n        <div class=\"articles__title\">{{ form.title }}</div>\n        <div class=\"articles__info\">\n          <span>作者: {{ form.author }}</span>\n          <span>时间: {{ form.date }}</span>\n        </div>\n        <div class=\"articles__content\" ref=\"content\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/**\n * 文章: 添加, 列表, 编辑, 删除\n * 七牛token\n */\nimport { \n  articlesadd, articleslist, articlesedit, articlesdelete, \n  qiniutoken\n} from '../api'\nimport utils from '../utils/index'\nimport moment from 'moment'\nexport default {\n  name: '',\n  data () {\n    return {\n      loading: false,\n      preview: false, //  预览\n      editorOption: { //  编辑器配置\n        placeholder: '移动端将选取第一张图作为封面图(宽高比例 1.3 : 1)',\n        theme: 'snow',\n        modules: {\n          toolbar: {\n            container: utils.toolbarOptions,\n            handlers: {\n              'image': value => {\n                if (value) {\n                  document.querySelector('.upload-demo input').click()\n                } else {\n                  this.quill.format('image', false)\n                }\n              }\n            }\n          }\n        }\n      },\n      show: '', //  默认显示列表\n      currentSetStatus: '', //  当前的操作状态\n      list: { //  用户信息\n        data: [], //  数据\n        total: 0 //  总数\n      },\n      para: { //  查询条件\n        pageIndex: 1,\n        pageSize: 10,\n      },\n      form: {\n        title: '',\n        content: ``\n      },\n      fileList: {\n        articles: []\n      },\n      qiniu: { //  七牛上传\n        token: '',\n        key: '',\n        uploadUrl: '', //  上传地址前缀\n      },\n    }\n  },\n  computed: {\n  },\n  mounted() {\n    this.show = 'list'\n    this.getarticleslist()\n    this.getqiniutoken()\n  },\n  methods: {\n    getqiniutoken () { //  拿到七牛的token\n      let para = {\n        bucket: 'huaxiaohong'\n      }\n      qiniutoken(para).then(res => {\n        console.log(res)\n        let { code, data, msg } = res.data\n        if (code === 200) {\n          this.qiniu.token = data.token\n          this.qiniu.uploadUrl = data.url\n        } else {\n          this.$message(msg)\n        }\n      })\n    },\n    handleBeforeUpload (file, type) { //  上传之前\n      this.loading = true\n      this.qiniu.key = ``+ type +`${moment().format('YYYYMMDDHHmmSSS')}${Number.parseInt(Math.random() * 1000, 10)}.${file.type.split('/')[1]}`\n    },\n    handleOnSuccess (response, file, fileList, type) { //  上传成功之后\n      let url = this.qiniu.uploadUrl + '/' + response.key\n      //  获取富文本组件实例\n      let quill = this.$refs.myQuillEditor.quill\n      if (response) {\n        // 获取光标所在位置\n        this.loading = false\n        let length = quill.getSelection().index\n        // 插入图片  res.info为服务器返回的图片地址\n        quill.insertEmbed(length, 'image', url)\n        // 调整光标到最后\n        quill.setSelection(length + 1)\n      } else {\n        this.$message.error('error')\n      }\n    },\n    handleOnRemove (file, fileList, type) { //  删除\n      console.log(file, fileList)\n    },\n    handleSearch (obj, val) { //  查询数据列表 obj: 对象, val: 值\n      switch (obj) {\n        case 'pagination': //  分页\n          this.para.pageIndex = val\n          this.getarticleslist()\n          break\n      }\n    },\n    handleOnChange (file, fileList, type) { //  图片本地预览\n      console.log(file, fileList)\n      this.getUrl(file.raw)\n    },\n    submitUpload() {\n      this.$refs.upload.submit()\n    },\n    getUrl (files) { //  图片本地预览\n      let reader = new FileReader()\n      reader.readAsDataURL(files) // 这里是最关键的一步，转换就在这里\n      let quill = this.$refs.myQuillEditor.quill\n      reader.onloadend = function () {\n         console.log(this.result)\n        if (this.result) {\n          // 获取光标所在位置\n          let length = quill.getSelection().index\n          // 插入图片  res.info为服务器返回的图片地址\n          quill.insertEmbed(length, 'image', this.result)\n          // 调整光标到最后\n          quill.setSelection(length + 1)\n        } else {\n          this.$message.error('error')\n        }\n      }\n    },\n    getarticleslist () { //  查询列表\n      articleslist(this.para).then(res => {\n        console.log(res)\n        let { code, msg, data, total } = res.data\n        if (code !== 200) {\n          this.$message.error(msg)\n        } else {\n          this.list.data = data\n          this.list.total = total\n        }\n      })\n    },\n    handleSet (obj, row) { //  根据不同状态处理对应事件\n      console.log(obj, row)\n      this.show = obj\n      switch (obj) {\n        case 'add':\n          this.form = {}\n          this.currentSetStatus = 'add'\n          break\n        case 'back':\n          this.show = 'list' //  显示列表界面\n          this.preview = false //  隐藏预览界面\n          break\n        case 'backedit':\n          this.preview = false\n          this.show = 'add'\n          break\n        case 'preview':\n          this.$refs.content.innerHTML = this.form.content\n          this.preview = true\n          break\n        case 'info':\n          this.form = row\n          this.$refs.content.innerHTML = this.form.content\n          this.preview = true\n          break\n        case 'edit':\n          this.form = row\n          this.currentSetStatus = 'edit'\n          break\n        case 'delete':\n          this.show = 'list'\n          this.$confirm('此操作将删除该数据是否继续?', '提示', {\n            confirmButtonText: '继续',\n            cancelButtonText: '取消',\n            type: 'danger'\n          }).then(() => {\n            this.form._id = row._id\n            let para = new URLSearchParams(this.form)\n            articlesdelete(para).then(res => {\n              let { code, msg } = res\n              if (code === 200) {\n                this.$message.success(msg)\n                this.getarticleslist()\n              } else {\n                this.$message.error(msg)\n              }\n            })\n          }).catch(() => {\n            this.$message.info('已取消')\n          })\n          break\n      }\n    },\n    handleSubmit () { //  发布文章\n      if (this.form.title === '' || !this.form.title) {\n        this.$message.error('标题不能为空')\n      } else {\n        this.form.author = sessionStorage.getItem('user')\n        this.form.uid = sessionStorage.getItem('uid')\n        // this.form.date = utils.formatterTime(new Date())\n        this.form.date = new Date().getTime()\n        if (this.form.content.match(/(http[^\">]*)/g)) {\n          this.form.cover = this.form.content.match(/(http[^\">]*)/g)[0] //  全文查找第一张图片\n        } else {\n          this.$message.error('请上传至少一张图片')\n          return false\n        }\n        let para = new URLSearchParams(this.form)\n        let a\n        if (this.currentSetStatus === 'add') {\n          a = articlesadd(para)\n        } else {\n          a = articlesedit(para)\n        }\n        a.then(res => {\n          console.log(res)\n          let { code, msg } = res\n          if (code === 200) {\n            this.getarticleslist()\n            this.show = 'list'\n            this.preview = false\n            this.$message.success(msg)\n          } else {\n            this.$message.error(msg)\n          }\n        })\n      }\n    }\n  },\n}\n</script>\n<style lang=\"stylus\">\n#articles {\n  .articles__btn {\n    text-align right \n    margin-bottom 20px\n  }\n  .articles__title {\n    margin 20px 0\n    font-size 20px\n  }\n  .ql-container {\n    height 800px\n  }\n  .articles {\n    &__title {\n      font-size 24px\n      text-align center\n    }\n    &__info {\n      text-align right\n      font-size 16px\n      color #888\n      span {\n        display inline-block\n        margin 0 8px\n      }\n    }\n    &__content {\n      margin-top 20px\n      text-indent 2em\n    }\n  }\n}\n</style>\n\n"]}]}