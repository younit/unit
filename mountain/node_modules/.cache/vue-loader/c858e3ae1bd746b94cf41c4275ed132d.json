{"remainingRequest":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!/Users/zzz/Desktop/mac/unit/mountain/src/views/city.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zzz/Desktop/mac/unit/mountain/src/views/city.vue","mtime":1561104920399},{"path":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zzz/Desktop/mac/unit/mountain/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n//  城市列表, 添加景点, 修改景点, 删除景点\nimport { cityslist, citysadd, citysedit, citysdelete } from '../api'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'system',\n  data () {\n    return {\n      list: { //  用户信息\n        data: [], //  数据\n        total: 0 //  总数\n      },\n      form: {}, //  表单\n      currentSetSts: '', //  当前操作状态\n      dialogCfg: { //  弹出框配置\n        title: '', //  标题\n        dialogVisible: false, //  显示隐藏弹出框\n        width: '30%', //  宽度\n        center: true, //  是否居中\n        fullscreen: false, //  是否全屏\n      },\n      rules: { //  规则\n        width: '100px',\n        city: [{ required: true, message: '请选择城市', trigger: 'change' }],\n        name: [{ required: true, message: '请输入景点名称', trigger: 'blur', type },],\n        adultTicket: [{ required: true, message: '请输入成人票价格', trigger: 'blur' }, { type: 'number', message: '必须为数字值'}],\n        childTicket: [{ required: true, message: '请输入儿童票价格', trigger: 'blur' }, { type: 'number', message: '必须为数字值'}],\n        openingTime: [{ required: true, message: '请输入开始时间', trigger: 'blur' }, { type: 'number', message: '必须为数字值'}],\n        closingTime: [{ required: true, message: '请输入结束时间', trigger: 'blur' }, { type: 'number', message: '必须为数字值'}],\n      },\n      para: { //  查询条件\n        pageIndex: 1,\n        pageSize: 10,\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['getcitys']) //  城市列表\n  },\n  mounted() {\n    this.getlist()\n  },\n  methods: {\n    getlist () { //  查询用户列表\n      cityslist(this.para).then(res => {\n        console.log(res)\n        let { code, msg, data, total } = res.data\n        if (code !== 200) {\n          this.$message.error(msg)\n        } else {\n          this.list.data = data\n          this.list.total = total\n        }\n      })\n    },\n    handleSearch (obj, val) { //  查询数据列表 obj: 对象, val: 值\n      switch (obj) {\n        case 'pagination': //  分页\n          this.para.pageIndex = val\n          this.getlist()\n          break\n      }\n    },\n    handleSet (obj, row) { //  根据不同状态处理对应事件\n      console.log(obj, row)\n      this.from = row\n      this.currentSetSts = obj //  设置当前操作状态\n      switch (obj) {\n        case 'add': //  添加\n          this.dialogCfg.title = '添加'\n          this.form = {}\n          this.dialogCfg.dialogVisible = true\n          break\n        case 'edit': //  编辑\n          this.dialogCfg.title = '编辑'\n          this.form = row\n          this.form.id = row._id\n          this.dialogCfg.dialogVisible = true\n          break\n        case 'delete': //  删除\n          this.$confirm('此操作将删除该数据是否继续?', '提示', {\n            confirmButtonText: '继续',\n            cancelButtonText: '取消',\n            type: 'danger'\n          }).then(() => {\n            this.form.id = row._id\n            let para = new URLSearchParams(this.form)\n            citysdelete(para).then(res => {\n              let { code, msg } = res\n              if (code === 200) {\n                this.$message.success(msg)\n                this.getlist()\n              } else {\n                this.$message.error(msg)\n              }\n            })\n          }).catch(() => {\n            this.$message.info('已取消')\n          })\n          break\n      }\n    },\n    handleSuccess () {\n      switch (this.currentSetSts) {\n        case 'add': //  添加\n          this.$refs.form.validate((valid) => {\n            if (valid) {\n              let para = new URLSearchParams(this.form)\n              citysadd(para).then(res => {\n                console.log(res)\n                let { code, msg } = res\n                if (code === 200) {\n                  this.$confirm('添加成功,是否继续添加?', '提示', {\n                    confirmButtonText: '继续',\n                    cancelButtonText: '取消',\n                    type: 'primary'\n                  }).then(() => {\n                    this.form.name = ''\n                  }).catch(() => {\n                    this.$message.success(msg)\n                    this.getlist()\n                    this.dialogCfg.dialogVisible = false\n                  })\n                } else {\n                  this.$message.error(msg)\n                }\n              })\n            } else {\n              this.$message.error('请填写完整')\n              return false\n            }\n          })\n          break\n        case 'edit': //  编辑\n          this.$refs.form.validate((valid) => {\n            if (valid) {\n              let para = new URLSearchParams(this.form)\n              citysedit(para).then(res => {\n                console.log(res)\n                let { code, msg } = res\n                if (code === 200) {\n                  this.$message.success(msg)\n                  this.getlist()\n                  this.dialogCfg.dialogVisible = false\n                } else {\n                  this.$message.error(msg)\n                }\n              })\n            } else {\n              this.$message.error('请填写完整')\n              return false\n            }\n          })\n          break\n      }\n    }\n  },\n}\n",{"version":3,"sources":["city.vue"],"names":[],"mappingsfile":"city.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <template>\n      <div class=\"txtright marginbtm30\">\n         <el-button type=\"info\" @click=\"handleSet('add', {})\">添加城市</el-button>\n      </div>\n    </template>\n    <template>\n      <el-table\n        :data=\"list.data\"\n        style=\"width: 100%\">\n\n         <el-table-column label=\"城市\">\n          <template slot-scope=\"scope\">{{ scope.row.city }}</template>\n        </el-table-column>\n\n        <el-table-column label=\"名称\">\n          <template slot-scope=\"scope\">{{ scope.row.name }}</template>\n        </el-table-column>\n\n        <el-table-column label=\"热度\">\n          <template slot-scope=\"scope\">{{ scope.row.hot }}</template>\n        </el-table-column>\n\n        <el-table-column label=\"排名\">\n          <template slot-scope=\"scope\">{{ scope.row.rank }}</template>\n        </el-table-column>\n\n        <el-table-column label=\"评分\">\n          <template slot-scope=\"scope\">{{ scope.row.score }}</template>\n        </el-table-column>\n\n        <el-table-column label=\"成人票(￥)\" min-width=\"90\">\n          <template slot-scope=\"scope\">{{ scope.row.adultTicket }}</template>\n        </el-table-column>\n\n        <el-table-column label=\"儿童票(￥)\" min-width=\"90\">\n          <template slot-scope=\"scope\">{{ scope.row.childTicket }}</template>\n        </el-table-column>\n\n        <el-table-column label=\"开门时间\">\n          <template slot-scope=\"scope\">{{ 'AM: ' + scope.row.openingTime }}</template>\n        </el-table-column>\n\n        <el-table-column label=\"关门时间\">\n          <template slot-scope=\"scope\">{{ 'PM: ' +scope.row.closingTime }}</template>\n        </el-table-column>\n\n        <el-table-column label=\"是否有票\">\n          <template slot-scope=\"scope\">{{ scope.row.hasTickets === true? '有': '无' }}</template>\n        </el-table-column>\n\n        <el-table-column label=\"操作\" min-width=\"90\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              @click=\"handleSet('edit', scope.row)\">编辑</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              @click=\"handleSet('delete', scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"txtcenter\">\n        <el-pagination\n          background\n          layout=\"total, prev, pager, next\"\n          @current-change=\"(value) => {return handleSearch('pagination', value)}\"\n          :current-page=\"para.pageIndex\"\n          :total=\"list.total\">\n        </el-pagination>\n      </div>\n     </template>\n\n    <el-dialog\n      :title=\"dialogCfg.title\"\n      :visible.sync=\"dialogCfg.dialogVisible\"\n      :width=\"dialogCfg.width\"\n      :center=\"dialogCfg.center\"\n      :fullscreen=\"dialogCfg.fullscreen\"\n      >\n\n      <el-form :model=\"form\" ref=\"form\" :rules=\"rules\" :label-width=\"rules.width\" class=\"formStyle\">\n        <el-form-item label=\"城市\" prop=\"city\">\n          <el-select v-model=\"form.city\" placeholder=\"请选择\" filterable>\n            <el-option\n              v-for=\"item in getcitys\"\n              :key=\"item.key\"\n              :label=\"item.name\"\n              :value=\"item.name\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"景点名称\" prop=\"name\" :label-width=\"rules.width\">\n          <el-input v-model=\"form.name\" clearable></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"成人票\" prop=\"adultTicket\" :label-width=\"rules.width\">\n          <el-input v-model.number=\"form.adultTicket\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"儿童票\" prop=\"childTicket\" :label-width=\"rules.width\">\n          <el-input v-model.number=\"form.childTicket\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"开门时间\" prop=\"openingTime\" :label-width=\"rules.width\">\n          <el-input v-model.number=\"form.openingTime\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"关门时间\" prop=\"closingTime\" :label-width=\"rules.width\">\n          <el-input v-model.number=\"form.closingTime\"></el-input>\n        </el-form-item>\n\n      </el-form>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogCfg.dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleSuccess()\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n</template>\n<script>\n//  城市列表, 添加景点, 修改景点, 删除景点\nimport { cityslist, citysadd, citysedit, citysdelete } from '../api'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'system',\n  data () {\n    return {\n      list: { //  用户信息\n        data: [], //  数据\n        total: 0 //  总数\n      },\n      form: {}, //  表单\n      currentSetSts: '', //  当前操作状态\n      dialogCfg: { //  弹出框配置\n        title: '', //  标题\n        dialogVisible: false, //  显示隐藏弹出框\n        width: '30%', //  宽度\n        center: true, //  是否居中\n        fullscreen: false, //  是否全屏\n      },\n      rules: { //  规则\n        width: '100px',\n        city: [{ required: true, message: '请选择城市', trigger: 'change' }],\n        name: [{ required: true, message: '请输入景点名称', trigger: 'blur', type },],\n        adultTicket: [{ required: true, message: '请输入成人票价格', trigger: 'blur' }, { type: 'number', message: '必须为数字值'}],\n        childTicket: [{ required: true, message: '请输入儿童票价格', trigger: 'blur' }, { type: 'number', message: '必须为数字值'}],\n        openingTime: [{ required: true, message: '请输入开始时间', trigger: 'blur' }, { type: 'number', message: '必须为数字值'}],\n        closingTime: [{ required: true, message: '请输入结束时间', trigger: 'blur' }, { type: 'number', message: '必须为数字值'}],\n      },\n      para: { //  查询条件\n        pageIndex: 1,\n        pageSize: 10,\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['getcitys']) //  城市列表\n  },\n  mounted() {\n    this.getlist()\n  },\n  methods: {\n    getlist () { //  查询用户列表\n      cityslist(this.para).then(res => {\n        console.log(res)\n        let { code, msg, data, total } = res.data\n        if (code !== 200) {\n          this.$message.error(msg)\n        } else {\n          this.list.data = data\n          this.list.total = total\n        }\n      })\n    },\n    handleSearch (obj, val) { //  查询数据列表 obj: 对象, val: 值\n      switch (obj) {\n        case 'pagination': //  分页\n          this.para.pageIndex = val\n          this.getlist()\n          break\n      }\n    },\n    handleSet (obj, row) { //  根据不同状态处理对应事件\n      console.log(obj, row)\n      this.from = row\n      this.currentSetSts = obj //  设置当前操作状态\n      switch (obj) {\n        case 'add': //  添加\n          this.dialogCfg.title = '添加'\n          this.form = {}\n          this.dialogCfg.dialogVisible = true\n          break\n        case 'edit': //  编辑\n          this.dialogCfg.title = '编辑'\n          this.form = row\n          this.form.id = row._id\n          this.dialogCfg.dialogVisible = true\n          break\n        case 'delete': //  删除\n          this.$confirm('此操作将删除该数据是否继续?', '提示', {\n            confirmButtonText: '继续',\n            cancelButtonText: '取消',\n            type: 'danger'\n          }).then(() => {\n            this.form.id = row._id\n            let para = new URLSearchParams(this.form)\n            citysdelete(para).then(res => {\n              let { code, msg } = res\n              if (code === 200) {\n                this.$message.success(msg)\n                this.getlist()\n              } else {\n                this.$message.error(msg)\n              }\n            })\n          }).catch(() => {\n            this.$message.info('已取消')\n          })\n          break\n      }\n    },\n    handleSuccess () {\n      switch (this.currentSetSts) {\n        case 'add': //  添加\n          this.$refs.form.validate((valid) => {\n            if (valid) {\n              let para = new URLSearchParams(this.form)\n              citysadd(para).then(res => {\n                console.log(res)\n                let { code, msg } = res\n                if (code === 200) {\n                  this.$confirm('添加成功,是否继续添加?', '提示', {\n                    confirmButtonText: '继续',\n                    cancelButtonText: '取消',\n                    type: 'primary'\n                  }).then(() => {\n                    this.form.name = ''\n                  }).catch(() => {\n                    this.$message.success(msg)\n                    this.getlist()\n                    this.dialogCfg.dialogVisible = false\n                  })\n                } else {\n                  this.$message.error(msg)\n                }\n              })\n            } else {\n              this.$message.error('请填写完整')\n              return false\n            }\n          })\n          break\n        case 'edit': //  编辑\n          this.$refs.form.validate((valid) => {\n            if (valid) {\n              let para = new URLSearchParams(this.form)\n              citysedit(para).then(res => {\n                console.log(res)\n                let { code, msg } = res\n                if (code === 200) {\n                  this.$message.success(msg)\n                  this.getlist()\n                  this.dialogCfg.dialogVisible = false\n                } else {\n                  this.$message.error(msg)\n                }\n              })\n            } else {\n              this.$message.error('请填写完整')\n              return false\n            }\n          })\n          break\n      }\n    }\n  },\n}\n</script>\n<style lang=\"stylus\" scoped>\n\n</style>\n\n"]}]}